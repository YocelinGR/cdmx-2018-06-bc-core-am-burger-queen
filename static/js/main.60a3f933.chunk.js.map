{"version":3,"sources":["Components/Session/AuthUserContext.js","firebase/firebase.js","firebase/auth.js","firebase/db.js","Components/SignOut/SignOut.js","constants/routes.js","Components/Navigation/Navigation.js","Components/signup/signup.js","Components/psw-forget/psw-forget.js","Components/signin/signin.js","Components/Session/withAuthorization.js","Components/Home/Home.js","Components/Breakfast/Breakfast.js","Components/Lunch/Lunch.js","Components/ChefView/ChefView.js","Components/AdminView/AdminView.js","Components/resetPassword/resetPassword.js","Components/Account/Account.js","Components/App/App.js","Components/Session/withAuthentication.js","registerServiceWorker.js","index.js"],"names":["AuthUserContext","React","createContext","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","firebase","apps","length","initializeApp","db","database","auth","doCreateUserWithEmailAndPasword","email","password","createUserWithEmailAndPasword","doSignInWithEmailAndPasword","signInWithEmailAndPasword","doSignOut","signOut","doPassordReset","sendPasswordResetEmail","doPasswordUpdate","currentUser","updatePassword","doCreateUser","id","username","ref","concat","set","onceGetUsers","once","SignOutButton","react_default","a","createElement","type","onClick","HOME","NavigationAuth","Link","to","routes","SignOut","NavigationNonAuth","Navigation","Session_AuthUserContext","Consumer","authUser","Navigation_NavigationAuth","Navigation_NavigationNonAuth","updateByPropertyName","propertyName","value","Object","defineProperty","INITIAL_STATE","passwordOne","error","SignUpForm","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onSubmit","event","_this$state","state","history","doCreateUserWithEmailAndPassword","then","user","uid","setState","objectSpread","push","catch","preventDefault","_this2","_this$state2","isInvalid","className","alt","src","onChange","target","htmlFor","disabled","message","Component","SignUpLink","withRouter","_ref","signup_SignUpForm","PasswordForgetForm","doPasswordReset","class","PasswordForgetLink","PasswordForgetPage","psw_forget_PasswordForgetForm","SignInForm","doSignInWithEmailAndPassword","signin_signin","signin_SignInForm","psw_forget_PasswordForgetLink","signup_SignUpLink","withAuthorization","condition","WithAuthorization","_React$Component","apply","arguments","inherits","createClass","key","onAuthStateChanged","HomePage","users","snapshot","val","Home_UserList","UserList","keys","map","Breakfast","Lunch","ChefView","AdminView","PasswordChangeForm","placeholder","resetPassword","withAuthentication","WithAuthentication","Provider","BrowserRouter","Components_Navigation_Navigation","Route","exact","path","component","Components_Breakfast_Breakfast","Components_Lunch_Lunch","Components_ChefView_ChefView","Components_AdminView_AdminView","signup","psw_forget_psw_forget","Home_Home","Account","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","ReactDOM","render","Components_App_App","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"2pBAGeA,EADSC,IAAMC,cAAc,uBCoBtCC,eAlBa,CACfC,OAAQ,sDACRC,WAAY,gDACZC,YAAa,uDACbC,UAAW,gCACXC,cAAe,4CACfC,kBAAmB,6BAgBnBC,IAASC,KAAKC,QACdF,IAASG,cAAcV,GAE3B,IAAMW,EAAIJ,IAASK,WACbC,EAAKN,IAASM,OC5BPC,EAAkC,SAACC,EAAMC,GAAP,OAC3CH,EAAKI,8BAA8BF,EAAOC,IAGjCE,EAA8B,SAACH,EAAMC,GAAP,OACvCH,EAAKM,0BAA0BJ,EAAOC,IAG7BI,EAAY,kBACrBP,EAAKQ,WAGIC,EAAiB,SAACP,GAAD,OAC1BF,EAAKU,uBAAuBR,IAInBS,EAAmB,SAACR,GAAD,OAC5BH,EAAKY,YAAYC,eAAeV,IClBvBW,EAAe,SAACC,EAAIC,EAAUd,GAAf,OACxBJ,EAAGmB,IAAH,SAAAC,OAAgBH,IAAMI,IAAI,CACtBH,WACAd,WAGKkB,EAAe,kBACxBtB,EAAGmB,IAAI,QAAQI,KAAK,UCGTC,EARO,kBACpBC,EAAAC,EAAAC,cAAA,UACEC,KAAK,SACLC,QAAS3B,EAAKO,WAFhB,aCHWqB,EAAO,ICYdC,EAAiB,kBACrBN,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAMC,GAAIC,GAAV,SACJT,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAMC,GDTS,YCSf,YACJR,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAMC,GDfY,cCelB,aACJR,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAMC,GDfQ,UCed,WACJR,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAMC,GDfO,SCeb,SACJR,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAMC,GDfQ,UCed,kBACJR,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACQ,EAAD,SAGFC,EAAoB,kBACxBX,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAMC,GD3BS,WC2Bf,cAGOI,EAxBI,kBACjBZ,EAAAC,EAAAC,cAACW,EAAgBC,SAAjB,KACG,SAAAC,GAAQ,OAAIA,EACTf,EAAAC,EAAAC,cAACc,EAAD,MACAhB,EAAAC,EAAAC,cAACe,EAAD,sECAFC,EAAuB,SAACC,EAAcC,GAAf,OAA0B,kBAAAC,OAAAC,EAAA,EAAAD,CAAA,GACrDF,EAAeC,KAEXG,EAAgB,CACrB9B,SAAU,GACVd,MAAO,GACP6C,YAAa,GACbC,MAAO,MAGFC,cACL,SAAAA,EAAYC,GAAM,IAAAC,EAAA,OAAAP,OAAAQ,EAAA,EAAAR,CAAAS,KAAAJ,IACjBE,EAAAP,OAAAU,EAAA,EAAAV,CAAAS,KAAAT,OAAAW,EAAA,EAAAX,CAAAK,GAAAO,KAAAH,KAAMH,KAGPO,SAAW,SAACC,GAAU,IAAAC,EAKjBR,EAAKS,MAHR5C,EAFoB2C,EAEpB3C,SACAd,EAHoByD,EAGpBzD,MACA6C,EAJoBY,EAIpBZ,YAIDc,EACKV,EAAKD,MADVW,QAGA7D,EAAK8D,iCAAiC5D,EAAO6C,GAC3CgB,KAAK,SAAAzB,GACLxC,EAAGgB,aAAawB,EAAS0B,KAAKC,IAAKjD,EAAUd,GAC5C6D,KAAK,WACLZ,EAAKe,SAAS,kBAAAtB,OAAAuB,EAAA,EAAAvB,CAAA,GAAWE,KACzBe,EAAQO,KAAKpC,KAEZqC,MAAM,SAAArB,GACPG,EAAKe,SAASzB,EAAqB,QAASO,QAG5CqB,MAAM,SAAArB,GACLG,EAAKe,SAASzB,EAAqB,QAASO,MAGjDU,EAAMY,kBA5BLnB,EAAKS,MAALhB,OAAAuB,EAAA,EAAAvB,CAAA,GAAiBE,GAFAK,wEAgCR,IAAAoB,EAAAlB,KAAAmB,EAMLnB,KAAKO,MAJR5C,EAFQwD,EAERxD,SACAd,EAHQsE,EAGRtE,MACA6C,EAJQyB,EAIRzB,YACAC,EALQwB,EAKRxB,MAGKyB,EACW,KAAhB1B,GACU,KAAV7C,GACa,KAAbc,EACD,OACCO,EAAAC,EAAAC,cAAA,QAAMgC,SAAYJ,KAAKI,UACvBlC,EAAAC,EAAAC,cAAA,OAAKiD,UAAW,cAChBnD,EAAAC,EAAAC,cAAA,OAAKiD,UAAU,OACdnD,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,wBACJF,EAAAC,EAAAC,cAAA,yCACAF,EAAAC,EAAAC,cAAA,OAAKkD,IAAK,kCAAkCC,IAAI,0HAEjDrD,EAAAC,EAAAC,cAAA,WAASiD,UAAY,eACpBnD,EAAAC,EAAAC,cAAA,OAAKiD,UAAU,OACdnD,EAAAC,EAAAC,cAAA,WAASiD,UAAU,WAClBnD,EAAAC,EAAAC,cAAA,OAAKiD,UAAU,OACdnD,EAAAC,EAAAC,cAAA,OAAKiD,UAAU,gCACdnD,EAAAC,EAAAC,cAAA,SAAOkB,MAAS3B,EACf6D,SAAW,SAAAnB,GAAK,OAAIa,EAAKL,SAASzB,EAAqB,WAAWiB,EAAMoB,OAAOnC,SAC/E5B,GAAG,aAAaW,KAAK,OAAOgD,UAAU,wBACvCnD,EAAAC,EAAAC,cAAA,SAAOsD,QAAQ,cAAf,cAGFxD,EAAAC,EAAAC,cAAA,OAAKiD,UAAU,OACdnD,EAAAC,EAAAC,cAAA,OAAKiD,UAAU,gCACdnD,EAAAC,EAAAC,cAAA,SAAOkB,MAASzC,EAAO2E,SAAY,SAAAnB,GAAK,OAAIa,EAAKL,SAASzB,EAAqB,QAASiB,EAAMoB,OAAOnC,SACpG5B,GAAG,QAAQW,KAAK,QAAQgD,UAAU,wBACnCnD,EAAAC,EAAAC,cAAA,SAAOsD,QAAQ,SAAf,WAGFxD,EAAAC,EAAAC,cAAA,OAAKiD,UAAU,OACdnD,EAAAC,EAAAC,cAAA,OAAKiD,UAAU,gCACdnD,EAAAC,EAAAC,cAAA,SAAOkB,MAAOI,EAAa8B,SAAY,SAAAnB,GAAK,OAAIa,EAAKL,SAASzB,EAAqB,cAAeiB,EAAMoB,OAAOnC,SAC9G5B,GAAG,WAAWW,KAAK,WAAWgD,UAAU,wBACzCnD,EAAAC,EAAAC,cAAA,SAAOsD,QAAQ,YAAf,cAGFxD,EAAAC,EAAAC,cAAA,OAAKiD,UAAU,OACdnD,EAAAC,EAAAC,cAAA,OAAKiD,UAAU,gCACdnD,EAAAC,EAAAC,cAAA,KAAGC,KAAO,SAASsD,SAAYP,EAAWC,UAAU,uCAApD,iBAOJ1B,GAASzB,EAAAC,EAAAC,cAAA,SAAIuB,EAAMiC,iBAxFEC,aA6FnBC,EAAa,kBAClB5D,EAAAC,EAAAC,cAAA,oDAAwCF,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAMC,GFjHxB,WEiHkB,YAEzBqD,cA/GG,SAAAC,GAAA,IAAExB,EAAFwB,EAAExB,QAAF,OAClBtC,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAAC6D,EAAD,CAAYzB,QAAWA,OCKnBpB,SAAuB,SAACC,EAAcC,GAAf,OAAyB,kBAAAC,OAAAC,EAAA,EAAAD,CAAA,GACnDF,EAAeC,MAGZG,EAAgB,CACpB5C,MAAO,GACP8C,MAAO,MAGHuC,cACJ,SAAAA,EAAYrC,GAAO,IAAAC,EAAA,OAAAP,OAAAQ,EAAA,EAAAR,CAAAS,KAAAkC,IACjBpC,EAAAP,OAAAU,EAAA,EAAAV,CAAAS,KAAAT,OAAAW,EAAA,EAAAX,CAAA2C,GAAA/B,KAAAH,KAAMH,KAKRO,SAAW,SAACC,GAAU,IACZxD,EAAUiD,EAAKS,MAAf1D,MAERF,EAAKwF,gBAAgBtF,GAClB6D,KAAK,WACJZ,EAAKe,SAAS,kBAAAtB,OAAAuB,EAAA,EAAAvB,CAAA,GAAYE,OAE3BuB,MAAM,SAAArB,GACLG,EAAKe,SAASzB,EAAqB,QAASO,MAGhDU,EAAMY,kBAdNnB,EAAKS,MAALhB,OAAAuB,EAAA,EAAAvB,CAAA,GAAkBE,GAHDK,wEAoBV,IAAAoB,EAAAlB,KAAAM,EAIHN,KAAKO,MAFP1D,EAFKyD,EAELzD,MACA8C,EAHKW,EAGLX,MAGIyB,EAAsB,KAAVvE,EAElB,OACFqB,EAAAC,EAAAC,cAAA,OAAKiD,UAAW,cACfnD,EAAAC,EAAAC,cAAA,OAAKiD,UAAU,OACdnD,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,wBACJF,EAAAC,EAAAC,cAAA,yCACAF,EAAAC,EAAAC,cAAA,OAAKkD,IAAK,kCAAkCC,IAAI,0HAEjDrD,EAAAC,EAAAC,cAAA,WAASiD,UAAY,eACpBnD,EAAAC,EAAAC,cAAA,OAAKiD,UAAU,OACdnD,EAAAC,EAAAC,cAAA,QAAMiD,UAAU,oCACfnD,EAAAC,EAAAC,cAAA,OAAKiD,UAAU,OACdnD,EAAAC,EAAAC,cAAA,OAAKiD,UAAU,gCACdnD,EAAAC,EAAAC,cAAA,SAAOkB,MAAOU,KAAKO,MAAM1D,MAChB2E,SAAU,SAAAnB,GAAK,OAAIa,EAAKL,SAASzB,EAAqB,QAASiB,EAAMoB,OAAOnC,SACrF5B,GAAG,QAAQW,KAAK,QAAQgD,UAAU,wBAClCnD,EAAAC,EAAAC,cAAA,SAAOsD,QAAQ,SAAf,WAGFxD,EAAAC,EAAAC,cAAA,OAAKiD,UAAU,OACdnD,EAAAC,EAAAC,cAAA,OAAKiD,UAAU,gCACdnD,EAAAC,EAAAC,cAAA,KAAGuD,SAAUP,EAAW/C,KAAK,SAAS+D,MAAM,uCAA5C,eAGMzC,GAASzB,EAAAC,EAAAC,cAAA,SAAIuB,EAAMiC,oBArDAC,aA8D3BQ,EAAqB,kBACzBnE,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAMC,GH9EqB,cG8E3B,sBAGW4D,EAjFY,kBACzBpE,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACmE,EAAD,QCOEnD,SAAuB,SAACC,EAAcC,GAAf,OAAyB,kBAAAC,OAAAC,EAAA,EAAAD,CAAA,GACnDF,EAAeC,MAGZG,EAAgB,CACpB5C,MAAO,GACPC,SAAU,GACV6C,MAAO,MAGH6C,cACJ,SAAAA,EAAY3C,GAAO,IAAAC,EAAA,OAAAP,OAAAQ,EAAA,EAAAR,CAAAS,KAAAwC,IACjB1C,EAAAP,OAAAU,EAAA,EAAAV,CAAAS,KAAAT,OAAAW,EAAA,EAAAX,CAAAiD,GAAArC,KAAAH,KAAMH,KAKRO,SAAW,SAACC,GAAU,IAAAC,EAIhBR,EAAKS,MAFP1D,EAFkByD,EAElBzD,MACAC,EAHkBwD,EAGlBxD,SAIA0D,EACEV,EAAKD,MADPW,QAGF7D,EAAK8F,6BAA6B5F,EAAOC,GACtC4D,KAAK,WACJZ,EAAKe,SAAS,kBAAAtB,OAAAuB,EAAA,EAAAvB,CAAA,GAAYE,KAC1Be,EAAQO,KAAKpC,KAEdqC,MAAM,SAAArB,GACLG,EAAKe,SAASzB,EAAqB,QAASO,MAGhDU,EAAMY,kBAtBNnB,EAAKS,MAALhB,OAAAuB,EAAA,EAAAvB,CAAA,GAAkBE,GAHDK,wEA4BV,IAAAoB,EAAAlB,KAAAmB,EAKHnB,KAAKO,MAHP1D,EAFKsE,EAELtE,MACAC,EAHKqE,EAGLrE,SACA6C,EAJKwB,EAILxB,MAGIyB,EACS,KAAbtE,GACU,KAAVD,EAEF,OACHqB,EAAAC,EAAAC,cAAA,OAAKiD,UAAW,cACdnD,EAAAC,EAAAC,cAAA,WAASiD,UAAY,cAAcjB,SAAUJ,KAAKI,UACjDlC,EAAAC,EAAAC,cAAA,OAAKiD,UAAU,OACdnD,EAAAC,EAAAC,cAAA,QAAMiD,UAAU,WACfnD,EAAAC,EAAAC,cAAA,OAAKiD,UAAU,OACdnD,EAAAC,EAAAC,cAAA,OAAKiD,UAAU,gCACdnD,EAAAC,EAAAC,cAAA,SAAOkB,MAAOzC,EACN2E,SAAU,SAAAnB,GAAK,OAAIa,EAAKL,SAASzB,EAAqB,QAASiB,EAAMoB,OAAOnC,SACpF5B,GAAG,QAAQW,KAAK,QAAQgD,UAAU,wBAClCnD,EAAAC,EAAAC,cAAA,SAAOsD,QAAQ,SAAf,WAGFxD,EAAAC,EAAAC,cAAA,OAAKiD,UAAU,OACdnD,EAAAC,EAAAC,cAAA,OAAKiD,UAAU,gCACdnD,EAAAC,EAAAC,cAAA,SAAOkB,MAAOxC,EACd0E,SAAU,SAAAnB,GAAK,OAAIa,EAAKL,SAASzB,EAAqB,WAAYiB,EAAMoB,OAAOnC,SAC/E5B,GAAG,WAAWW,KAAK,WAAWgD,UAAU,wBACxCnD,EAAAC,EAAAC,cAAA,SAAOsD,QAAQ,YAAf,cAGFxD,EAAAC,EAAAC,cAAA,OAAKiD,UAAU,OACdnD,EAAAC,EAAAC,cAAA,OAAKiD,UAAU,gCACdnD,EAAAC,EAAAC,cAAA,KAAGuD,SAAUP,EAAW/C,KAAK,SAASgD,UAAU,uCAAhD,aAGkB1B,GAASzB,EAAAC,EAAAC,cAAA,SAAIuB,EAAMiC,oBAlEpBC,aA2EzBa,EAAeX,WAAf,CA5FmB,SAAAC,GAAA,IAAGxB,EAAHwB,EAAGxB,QAAH,OACjBtC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACuE,EAAD,CAAYnC,QAASA,IACrBtC,EAAAC,EAAAC,cAACwE,EAAD,MACA1E,EAAAC,EAAAC,cAACyE,EAAD,SCgBWC,eAtBW,SAACC,GAAD,OAAe,SAAClB,GAAc,IAChDmB,EADgD,SAAAC,GAAA,SAAAD,IAAA,OAAAzD,OAAAQ,EAAA,EAAAR,CAAAS,KAAAgD,GAAAzD,OAAAU,EAAA,EAAAV,CAAAS,KAAAT,OAAAW,EAAA,EAAAX,CAAAyD,GAAAE,MAAAlD,KAAAmD,YAAA,OAAA5D,OAAA6D,EAAA,EAAA7D,CAAAyD,EAAAC,GAAA1D,OAAA8D,EAAA,EAAA9D,CAAAyD,EAAA,EAAAM,IAAA,oBAAAhE,MAAA,WAEhC,IAAAQ,EAAAE,KAClB3D,EAASM,KAAK4G,mBAAmB,SAAAtE,GAC1B8D,EAAU9D,IACba,EAAKD,MAAMW,QAAQO,KLZN,eKOiC,CAAAuC,IAAA,SAAAhE,MAAA,WAU3C,IAAA4B,EAAAlB,KACP,OACE9B,EAAAC,EAAAC,cAACW,EAAgBC,SAAjB,KACG,SAAAC,GAAQ,OAAIA,EAAWf,EAAAC,EAAAC,cAACyD,EAAcX,EAAKrB,OAAY,WAbVmD,EAAA,CACtBpH,IAAMiG,WAkBtC,OAAOE,YAAWiB,MCddQ,gDACJ,SAAAA,EAAY3D,GAAO,IAAAC,EAAA,OAAAP,OAAAQ,EAAA,EAAAR,CAAAS,KAAAwD,IACjB1D,EAAAP,OAAAU,EAAA,EAAAV,CAAAS,KAAAT,OAAAW,EAAA,EAAAX,CAAAiE,GAAArD,KAAAH,KAAMH,KAEDU,MAAQ,CACXkD,MAAO,IAJQ3D,mFAQC,IAAAoB,EAAAlB,KAClBvD,EAAGsB,eAAe2C,KAAK,SAAAgD,GAAQ,OAC7BxC,EAAKL,SAAS,iBAAO,CAAE4C,MAAOC,EAASC,4CAIlC,IACCF,EAAUzD,KAAKO,MAAfkD,MAER,OACEvF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,+CAEIqF,GAASvF,EAAAC,EAAAC,cAACwF,GAAD,CAAUH,MAAOA,YAtBf5B,cA4BjBgC,GAAW,SAAA7B,GAAA,IAAGyB,EAAHzB,EAAGyB,MAAH,OACfvF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,wCACAF,EAAAC,EAAAC,cAAA,oDAECmB,OAAOuE,KAAKL,GAAOM,IAAI,SAAAT,GAAG,OACzBpF,EAAAC,EAAAC,cAAA,OAAKkF,IAAKA,GAAMG,EAAMH,GAAK3F,cAMlBmF,KAFO,SAAC7D,GAAD,QAAgBA,GAEvB6D,CAAiCU,IC7CjCQ,GALG,kBAChB9F,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,4BCGW6F,GALD,kBACZ/F,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,4BCGW8F,GALE,kBACfhG,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,4BCGW+F,GALG,kBAChBjG,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,4BCAEgB,GAAuB,SAACC,EAAcC,GAAf,OAAyB,kBAAAC,OAAAC,EAAA,EAAAD,CAAA,GACnDF,EAAeC,KAGZG,GAAgB,CACpBC,YAAa,GACbC,MAAO,MAmDMyE,eA/Cb,SAAAA,EAAYvE,GAAO,IAAAC,EAAA,OAAAP,OAAAQ,EAAA,EAAAR,CAAAS,KAAAoE,IACjBtE,EAAAP,OAAAU,EAAA,EAAAV,CAAAS,KAAAT,OAAAW,EAAA,EAAAX,CAAA6E,GAAAjE,KAAAH,KAAMH,KAKRO,SAAW,SAACC,GAAU,IACZX,EAAgBI,EAAKS,MAArBb,YAER/C,EAAKW,iBAAiBoC,GACnBgB,KAAK,WACJZ,EAAKe,SAAS,kBAAAtB,OAAAuB,EAAA,EAAAvB,CAAA,GAAYE,QAE3BuB,MAAM,SAAArB,GACLG,EAAKe,SAASzB,GAAqB,QAASO,MAGhDU,EAAMY,kBAdNnB,EAAKS,MAALhB,OAAAuB,EAAA,EAAAvB,CAAA,GAAkBE,IAHDK,wEAoBV,IAAAoB,EAAAlB,KAAAM,EAIHN,KAAKO,MAFPb,EAFKY,EAELZ,YACAC,EAHKW,EAGLX,MAGIyB,EACY,KAAhB1B,EAEF,OACExB,EAAAC,EAAAC,cAAA,QAAMgC,SAAUJ,KAAKI,UACnBlC,EAAAC,EAAAC,cAAA,SACEkB,MAAOI,EACP8B,SAAU,SAAAnB,GAAK,OAAIa,EAAKL,SAASzB,GAAqB,cAAeiB,EAAMoB,OAAOnC,SAClFjB,KAAK,WACLgG,YAAY,iBAEdnG,EAAAC,EAAAC,cAAA,UAAQuD,SAAUP,EAAW/C,KAAK,UAAlC,qBAIEsB,GAASzB,EAAAC,EAAAC,cAAA,SAAIuB,EAAMiC,iBA1CIC,aCOlBiB,KAFO,SAAC7D,GAAD,QAAgBA,GAEvB6D,CAbK,kBAChB5E,EAAAC,EAAAC,cAACW,EAAgBC,SAAjB,KACC,SAAAC,GAAQ,OACLf,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,sBAAca,EAASpC,OACvBqB,EAAAC,EAAAC,cAACmE,EAAD,MACArE,EAAAC,EAAAC,cAACkG,GAAD,WCyBOC,GCjCY,SAAC1C,GAAD,gBAAAoB,GAEvB,SAAAuB,EAAY3E,GAAO,IAAAC,EAAA,OAAAP,OAAAQ,EAAA,EAAAR,CAAAS,KAAAwE,IACf1E,EAAAP,OAAAU,EAAA,EAAAV,CAAAS,KAAAT,OAAAW,EAAA,EAAAX,CAAAiF,GAAArE,KAAAH,KAAMH,KAEHU,MAAQ,CACXtB,SAAU,MAJKa,EAFI,OAAAP,OAAA6D,EAAA,EAAA7D,CAAAiF,EAAAvB,GAAA1D,OAAA8D,EAAA,EAAA9D,CAAAiF,EAAA,EAAAlB,IAAA,oBAAAhE,MAAA,WAUH,IAAA4B,EAAAlB,KAClB3D,EAASM,KAAK4G,mBAAmB,SAAAtE,GAC/BA,EACIiC,EAAKL,SAAS,iBAAO,CAAE5B,cACvBiC,EAAKL,SAAS,iBAAO,CAAE5B,SAAU,YAdlB,CAAAqE,IAAA,SAAAhE,MAAA,WAkBd,IACCL,EAAae,KAAKO,MAAlBtB,SAER,OACEf,EAAAC,EAAAC,cAACW,EAAgB0F,SAAjB,CAA0BnF,MAAOL,GAC/Bf,EAAAC,EAAAC,cAACyD,EAAc7B,KAAKH,YAvBH2E,EAAA,CACU5I,IAAMiG,WDgC5B0C,CApBH,kBACXrG,EAAAC,EAAAC,cAACsG,EAAA,EAAD,KACCxG,EAAAC,EAAAC,cAAA,OAAKiD,UAAU,OACdnD,EAAAC,EAAAC,cAACuG,EAAD,MAEAzG,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAACwG,EAAA,EAAD,CAAOC,OAAK,EAACC,KbtBU,aasBcC,UAAW,kBAAM7G,EAAAC,EAAAC,cAAC4G,GAAD,SACnD9G,EAAAC,EAAAC,cAACwG,EAAA,EAAD,CAAOC,OAAK,EAACC,KbtBG,SasBiBC,UAAW,kBAAM7G,EAAAC,EAAAC,cAAC6G,GAAD,SAClD/G,EAAAC,EAAAC,cAACwG,EAAA,EAAD,CAAOC,OAAK,EAACC,KbtBE,QasBiBC,UAAW,kBAAM7G,EAAAC,EAAAC,cAAC8G,GAAD,SACjDhH,EAAAC,EAAAC,cAACwG,EAAA,EAAD,CAAOC,OAAK,EAACC,KbtBG,SasBiBC,UAAW,kBAAM7G,EAAAC,EAAAC,cAAC+G,GAAD,SACrDjH,EAAAC,EAAAC,cAACwG,EAAA,EAAD,CAAOC,OAAK,EAACC,Kb5BO,Ua4BeC,UAAW,kBAAM7G,EAAAC,EAAAC,cAACgH,EAAD,SACpDlH,EAAAC,EAAAC,cAACwG,EAAA,EAAD,CAAOC,OAAK,EAACC,Kb9BO,Ua8BeC,UAAW,kBAAM7G,EAAAC,EAAAC,cAACsE,EAAD,SACpDxE,EAAAC,EAAAC,cAACwG,EAAA,EAAD,CAAOC,OAAK,EAACC,KbxBe,aawBeC,UAAW,kBAAM7G,EAAAC,EAAAC,cAACiH,EAAD,SAC5DnH,EAAAC,EAAAC,cAACwG,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAMnG,EAAaoG,UAAW,kBAAM7G,EAAAC,EAAAC,cAACkH,GAAD,SACjDpH,EAAAC,EAAAC,cAACwG,EAAA,EAAD,CAAOC,OAAK,EAACC,KbzBO,WayBeC,UAAW,kBAAM7G,EAAAC,EAAAC,cAACmH,GAAD,SAEpDrH,EAAAC,EAAAC,cAAA,eEzBGoH,GAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DAsCN,SAASC,GAAgBC,GACvBC,UAAUC,cACPC,SAASH,GACTrF,KAAK,SAAAyF,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiB9F,QACfyF,UAAUC,cAAcO,WAK1BC,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,2CAMrB1F,MAAM,SAAArB,GACL8G,QAAQ9G,MAAM,4CAA6CA,KCrEjEgH,IAASC,OAAO1I,EAAAC,EAAAC,cAACyI,GAAD,MAASC,SAASC,eAAe,SDUlC,WACb,GAA6C,kBAAmBf,UAAW,CAGzE,GADkB,IAAIgB,IAAIC,wCAAwBvB,OAAOC,UAC3CuB,SAAWxB,OAAOC,SAASuB,OAIvC,OAGFxB,OAAOyB,iBAAiB,OAAQ,WAC9B,IAAMpB,EAAK,GAAAlI,OAAMoJ,wCAAN,sBAEPzB,IAiDV,SAAiCO,GAE/BqB,MAAMrB,GACHrF,KAAK,SAAA2G,GAGkB,MAApBA,EAASC,SACuD,IAAhED,EAASE,QAAQC,IAAI,gBAAgBC,QAAQ,cAG7CzB,UAAUC,cAAcyB,MAAMhH,KAAK,SAAAyF,GACjCA,EAAawB,aAAajH,KAAK,WAC7BgF,OAAOC,SAASiC,aAKpB9B,GAAgBC,KAGnB/E,MAAM,WACLyF,QAAQC,IACN,mEArEAmB,CAAwB9B,GAIxBC,UAAUC,cAAcyB,MAAMhH,KAAK,WACjC+F,QAAQC,IACN,+GAMJZ,GAAgBC,MCrCxB+B","file":"static/js/main.60a3f933.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst AuthUserContext = React.createContext(null);\r\nexport default AuthUserContext;\r\n","import firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/database';\r\n\r\nconst prodConfig = {\r\n    apiKey: \"process.env.AIzaSyBG5f44i0Z7u08aC4jvzwt5WtOA8FC_Ntw\",\r\n    authDomain: \"process.env.burgerqueen-4582f.firebaseapp.com\",\r\n    databaseURL: \"process.env.https://burgerqueen-4582f.firebaseio.com\",\r\n    projectId: \"process.env.burgerqueen-4582f\",\r\n    storageBucket: \"process.env.burgerqueen-4582f.appspot.com\",\r\n    messagingSenderId: \"process.env.791271137757\",\r\n};\r\n\r\nconst devConfig = {\r\n    apiKey: \"process.env.AIzaSyBG5f44i0Z7u08aC4jvzwt5WtOA8FC_Ntw\",\r\n    authDomain: \"process.env.burgerqueen-4582f.firebaseapp.com\",\r\n    databaseURL: \"process.env.https://burgerqueen-4582f.firebaseio.com\",\r\n    projectId: \"process.env.burgerqueen-4582f\",\r\n    storageBucket: \"process.env.burgerqueen-4582f.appspot.com\",\r\n    messagingSenderId: \"process.env.791271137757\",\r\n};\r\n\r\nconst config = process.env.NODE_ENV === 'production'\r\n    ? prodConfig\r\n    : devConfig;\r\n\r\nif(!firebase.apps.length) {\r\n    firebase.initializeApp(config);\r\n}\r\nconst db= firebase.database();\r\nconst auth=firebase.auth();\r\n\r\nexport {\r\n    db,\r\n    auth,\r\n};\r\n","import { auth} from './firebase';\r\n// Sign UP\r\nexport const doCreateUserWithEmailAndPasword = (email,password) =>\r\n    auth.createUserWithEmailAndPasword(email, password);\r\n\r\n// Sign in\r\nexport const doSignInWithEmailAndPasword = (email,password) =>\r\n    auth.signInWithEmailAndPasword(email, password);\r\n\r\n// Sign out\r\nexport const doSignOut = () => \r\n    auth.signOut();\r\n\r\n//Password reset\r\nexport const doPassordReset = (email) => \r\n    auth.sendPasswordResetEmail(email);\r\n\r\n// Password Change\r\n\r\nexport const doPasswordUpdate = (password) =>\r\n    auth.currentUser.updatePassword(password);","import { db } from './firebase';\r\n\r\nexport const doCreateUser = (id, username, email) =>\r\n    db.ref(`users/${id}`).set({\r\n        username,\r\n        email,\r\n    });\r\n\r\nexport const onceGetUsers = () => \r\n    db.ref('user').once('value');\r\n\r\n    ","import React from 'react';\r\n\r\nimport { auth } from '../../firebase';\r\n\r\nconst SignOutButton = () =>\r\n  <button\r\n    type=\"button\"\r\n    onClick={auth.doSignOut}\r\n  >\r\n    Sign Out\r\n  </button>\r\n\r\nexport default SignOutButton;","export const SIGN_IN = '/signin';\r\nexport const SIGN_UP = '/signup';\r\nexport const HOME = '/';\r\nexport const  BREAKFAST = '/breakfast';\r\nexport const  LUNCH = '/lunch';\r\nexport const  CHEF = '/chef';\r\nexport const  ADMIN = '/admin';\r\nexport const PASSWORD_FORGET = '/pw-forget';\r\nexport const ACCOUNT = '/account';\r\n","import React from 'react';\r\nimport { Link} from 'react-router-dom';\r\nimport AuthUserContext from '../Session/AuthUserContext';\r\nimport SignOutButton from '../SignOut/SignOut';\r\nimport * as routes from '../../constants/routes';\r\n\r\nconst Navigation = () =>\r\n  <AuthUserContext.Consumer>\r\n    {authUser => authUser\r\n      ? <NavigationAuth />\r\n      : <NavigationNonAuth />\r\n    }\r\n  </AuthUserContext.Consumer>\r\n\r\nconst NavigationAuth = () =>\r\n  <ul>\r\n    <li><Link to={routes.HOME}>Home</Link></li>\r\n    <li><Link to={routes.ACCOUNT}>Account</Link></li>\r\n    <li><Link to={routes.BREAKFAST}>Desayuno</Link></li>\r\n    <li><Link to={routes.LUNCH}>Comida</Link></li>\r\n    <li><Link to={routes.CHEF}>Chef</Link></li>\r\n    <li><Link to={routes.ADMIN}>Administrador</Link></li>\r\n    <li><SignOutButton /></li>\r\n  </ul>\r\n\r\nconst NavigationNonAuth = () =>\r\n  <ul>\r\n    <li><Link to={routes.SIGN_IN}>Sign In</Link></li>\r\n  </ul>\r\n\r\nexport default Navigation;","import React, { Component }from 'react';\r\nimport {Link, withRouter,  } from 'react-router-dom';\r\nimport {auth, db} from '../../firebase/firebase';\r\nimport * as routes from '../../constants/routes';\r\n\r\nconst SignUpPage = ({history}) =>\r\n\t<div>\r\n\t\t<SignUpForm history = {history}/>\r\n\t</div>\r\n\r\nconst updateByPropertyName = (propertyName, value ) => () => ({\r\n\t[propertyName]: value,\r\n});\r\nconst INITIAL_STATE = {\r\n\tusername: '',\r\n\temail: '',\r\n\tpasswordOne: '',\r\n\terror: null,\r\n};\r\n\r\nclass SignUpForm extends Component {\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {...INITIAL_STATE};\r\n\t}\r\n\tonSubmit = (event) => {\r\n\t\tconst {\r\n\t\t\tusername,\r\n\t\t\temail,\r\n\t\t\tpasswordOne,\r\n\t\t} = this.state;\r\n\r\n\t  const {\r\n\t\thistory,\r\n\t  } = this.props;\r\n\r\n\t\tauth.doCreateUserWithEmailAndPassword(email, passwordOne)\r\n\t\t\t.then(authUser => {\r\n\t\t\t\tdb.doCreateUser(authUser.user.uid, username, email)\r\n\t\t\t\t.then(() => {\r\n\t\t\t\t\tthis.setState(()=> ({ ...INITIAL_STATE }));\r\n\t\t\t\t\thistory.push(routes.HOME);\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.catch(error => {\r\n\t\t\t\t\tthis.setState(updateByPropertyName('error', error));\r\n\t\t\t\t\t});\r\n\t\t\t\t})\r\n\t\t\t\t.catch(error => {\r\n\t\t\t\t  this.setState(updateByPropertyName('error', error));\r\n\t\t\t\t});\r\n\t  \r\n\tevent.preventDefault();\r\n\t}\r\n\trender () {\r\n\t\tconst {\r\n\t\t\tusername,\r\n\t\t\temail,\r\n\t\t\tpasswordOne,\r\n\t\t\terror,\r\n\t\t} = this.state;\r\n\r\n\t\tconst isInvalid = \r\n\t\t\tpasswordOne === '' ||\r\n\t\t\temail === '' ||\r\n\t\t\tusername === '';\r\n\t\treturn (\r\n\t\t\t<form onSubmit = {this.onSubmit}>\r\n\t\t\t<div className= \"LogInStyle\">\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<h1>Burguer</h1>\r\n\t\t\t\t<h2><strong>Queen</strong></h2>\r\n\t\t\t\t<p>Para los amantes de lo bueno</p>\r\n\t\t\t\t<img alt =\"An hamburguer for the main view\" src=\"https://github.com/YocelinGR/cdmx-2018-06-bc-core-am-burger-queen/blob/master/assets/hamb-burgue-circle.png?raw=true\" />\r\n\t\t\t</div>\r\n\t\t\t<section className = \"form-format\">\r\n\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t<section className=\"col s12\">\r\n\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t<div className=\"input-field col s6 offset-s3\">\r\n\t\t\t\t\t\t\t\t<input value = {username}\r\n\t\t\t\t\t\t\t\t\tonChange= {event => this.setState(updateByPropertyName('username',event.target.value))}\r\n\t\t\t\t\t\t\t\t\tid=\"first_name\" type=\"text\" className=\"validate input-form\"></input> \r\n\t\t\t\t\t\t\t\t<label htmlFor=\"first_name\">NickName</label>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t<div className=\"input-field col s6 offset-s3\">\r\n\t\t\t\t\t\t\t\t<input value = {email} onChange = {event => this.setState(updateByPropertyName('email', event.target.value))}\r\n\t\t\t\t\t\t\t\t\tid=\"email\" type=\"email\" className=\"validate input-form\"></input>\r\n\t\t\t\t\t\t\t\t<label htmlFor=\"email\">Email</label>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t<div className=\"input-field col s6 offset-s3\">\r\n\t\t\t\t\t\t\t\t<input value={passwordOne} onChange = {event => this.setState(updateByPropertyName('passwordOne', event.target.value))}\r\n\t\t\t\t\t\t\t\t\tid=\"password\" type=\"password\" className=\"validate input-form\"></input>\r\n\t\t\t\t\t\t\t\t<label htmlFor=\"password\">Password</label>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t<div className=\"input-field col s6 offset-s3\">\r\n\t\t\t\t\t\t\t\t<a type = 'submit' disabled = {isInvalid} className=\"waves-effect waves-light btn go-btn\">Iniciar</a>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</section>\r\n\t\t\t\t</div>\r\n\t\t\t</section>\r\n\t\t</div>\r\n\t\t{ error && <p>{error.message}</p> }\r\n\t\t</form>\r\n\t\t);\r\n\t}\r\n}\r\nconst SignUpLink = () =>\r\n\t<span>Si no te has registrado, ve aquí: <Link to={routes.SIGN_UP}>SignUp</Link></span>\r\n\r\n\texport default withRouter(SignUpPage);\r\n\r\n\texport {\r\n\t\tSignUpForm,\r\n\t\tSignUpLink,\r\n\t};","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { auth } from '../../firebase';\r\nimport * as routes from '../../constants/routes';\r\nimport './psw-forget.css';\r\n\r\nconst PasswordForgetPage = () =>\r\n  <div>\r\n    <PasswordForgetForm />\r\n  </div>\r\n\r\nconst updateByPropertyName = (propertyName, value) => () => ({\r\n  [propertyName]: value,\r\n});\r\n\r\nconst INITIAL_STATE = {\r\n  email: '',\r\n  error: null,\r\n};\r\n\r\nclass PasswordForgetForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { ...INITIAL_STATE };\r\n  }\r\n\r\n  onSubmit = (event) => {\r\n    const { email } = this.state;\r\n\r\n    auth.doPasswordReset(email)\r\n      .then(() => {\r\n        this.setState(() => ({ ...INITIAL_STATE }));\r\n      })\r\n      .catch(error => {\r\n        this.setState(updateByPropertyName('error', error));\r\n      });\r\n\r\n    event.preventDefault();\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      email,\r\n      error,\r\n    } = this.state;\r\n\r\n    const isInvalid = email === '';\r\n\r\n    return (\r\n\t\t<div className= \"LogInStyle\">\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<h1>Burguer</h1>\r\n\t\t\t\t<h2><strong>Queen</strong></h2>\r\n\t\t\t\t<p>Para los amantes de lo bueno</p>\r\n\t\t\t\t<img alt =\"An hamburguer for the main view\" src=\"https://github.com/YocelinGR/cdmx-2018-06-bc-core-am-burger-queen/blob/master/assets/hamb-burgue-circle.png?raw=true\" />\r\n\t\t\t</div>\r\n\t\t\t<section className = \"form-format\">\r\n\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t<form className=\"col s12 onSubmit={this.onSubmit}\">\r\n\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t<div className=\"input-field col s6 offset-s3\">\r\n\t\t\t\t\t\t\t\t<input value={this.state.email}\r\n          \t\t\t\t\t\t\tonChange={event => this.setState(updateByPropertyName('email', event.target.value))}\r\n\t\t\t\t\t\t\t\tid=\"email\" type=\"email\" className=\"validate input-form\"></input>\r\n\t\t\t\t\t\t\t\t<label htmlFor=\"email\">Email</label>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t<div className=\"input-field col s6 offset-s3\">\r\n\t\t\t\t\t\t\t\t<a disabled={isInvalid} type=\"submit\" class=\"waves-effect waves-light btn go-btn\">Recuperar</a>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n            { error && <p>{error.message}</p> }          \r\n\t\t\t\t\t</form>\r\n\t\t\t\t</div>\r\n\t\t\t</section>\r\n\t\t</div>\r\n    );\r\n  }\r\n}\r\n\r\nconst PasswordForgetLink = () =>\r\n  <p>\r\n    <Link to={routes.PASSWORD_FORGET}>Forgot Password?</Link>\r\n  </p>\r\n\r\nexport default PasswordForgetPage;\r\n\r\nexport {\r\n  PasswordForgetForm,\r\n  PasswordForgetLink,\r\n};\r\n","import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport { SignUpLink } from '../signup/signup';\r\nimport { PasswordForgetLink } from '../psw-forget/psw-forget';\r\nimport { auth } from '../../firebase';\r\nimport * as routes from '../../constants/routes';\r\nimport './signin.css';\r\n\r\nconst SignInPage = ({ history }) =>\r\n  <div>\r\n    <SignInForm history={history} />\r\n    <PasswordForgetLink />\r\n    <SignUpLink />\r\n  </div>\r\n\r\nconst updateByPropertyName = (propertyName, value) => () => ({\r\n  [propertyName]: value,\r\n});\r\n\r\nconst INITIAL_STATE = {\r\n  email: '',\r\n  password: '',\r\n  error: null,\r\n};\r\n\r\nclass SignInForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { ...INITIAL_STATE };\r\n  }\r\n\r\n  onSubmit = (event) => {\r\n    const {\r\n      email,\r\n      password,\r\n    } = this.state;\r\n\r\n    const {\r\n      history,\r\n    } = this.props;\r\n\r\n    auth.doSignInWithEmailAndPassword(email, password)\r\n      .then(() => {\r\n        this.setState(() => ({ ...INITIAL_STATE }));\r\n        history.push(routes.HOME);\r\n      })\r\n      .catch(error => {\r\n        this.setState(updateByPropertyName('error', error));\r\n      });\r\n\r\n    event.preventDefault();\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      email,\r\n      password,\r\n      error,\r\n    } = this.state;\r\n\r\n    const isInvalid =\r\n      password === '' ||\r\n      email === '';\r\n\r\n    return (\r\n\t<div className= \"LogInStyle\">\r\n\t  <section className = \"form-format\" onSubmit={this.onSubmit}>\r\n\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t<form className=\"col s12\">\r\n\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t<div className=\"input-field col s6 offset-s3\">\r\n\t\t\t\t\t\t\t\t<input value={email}\r\n          \t\t\t\t\t\tonChange={event => this.setState(updateByPropertyName('email', event.target.value))}\r\n\t\t\t\t\t\t\t\tid=\"email\" type=\"email\" className=\"validate input-form\"></input>\r\n\t\t\t\t\t\t\t\t<label htmlFor=\"email\">Email</label>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t<div className=\"input-field col s6 offset-s3\">\r\n\t\t\t\t\t\t\t\t<input value={password}\r\n\t\t\t\t\t\t\t\tonChange={event => this.setState(updateByPropertyName('password', event.target.value))}\r\n\t\t\t\t\t\t\t\tid=\"password\" type=\"password\" className=\"validate input-form\"></input>\r\n\t\t\t\t\t\t\t\t<label htmlFor=\"password\">Password</label>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t<div className=\"input-field col s6 offset-s3\">\r\n\t\t\t\t\t\t\t\t<a disabled={isInvalid} type=\"submit\" className=\"waves-effect waves-light btn go-btn\">Iniciar</a>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n                        { error && <p>{error.message}</p> }\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</div>\r\n\t\t\t</section>\r\n\t  </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(SignInPage);\r\n\r\nexport {\r\n  SignInForm,\r\n};\r\n","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport AuthUserContext from './AuthUserContext';\r\nimport { firebase } from '../../firebase';\r\nimport * as routes from '../../constants/routes';\r\n\r\nconst withAuthorization = (condition) => (Component) => {\r\n  class WithAuthorization extends React.Component {\r\n    componentDidMount() {\r\n      firebase.auth.onAuthStateChanged(authUser => {\r\n        if (!condition(authUser)) {\r\n          this.props.history.push(routes.SIGN_IN);\r\n        }\r\n      });\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        <AuthUserContext.Consumer>\r\n          {authUser => authUser ? <Component {...this.props} /> : null}\r\n        </AuthUserContext.Consumer>\r\n      );\r\n    }\r\n  }\r\n\r\n  return withRouter(WithAuthorization);\r\n}\r\n\r\nexport default withAuthorization;","import React, { Component } from 'react';\r\n\r\nimport { Config } from '../../config'; // eslint-disable-next-line\r\nimport './Home.css'\r\nimport withAuthorization from '../Session/withAuthorization';\r\nimport { db } from '../../firebase';\r\n\r\nimport firebase from 'firebase';\r\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\r\nimport NavBar from '../NavBar/NavBar';\r\nimport FoodBar from '../FoodBar/FoodBar';\r\n\r\nclass HomePage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      users: {}\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    db.onceGetUsers().then(snapshot =>\r\n      this.setState(() => ({ users: snapshot.val() }))\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { users } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <p>Acceso restringido para usuarios</p>\r\n\r\n        { !!users && <UserList users={users} /> }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst UserList = ({ users }) =>\r\n  <div>\r\n    <h2>List of Usernames of Users</h2>\r\n    <p>(Saved on Sign Up in Firebase Database)</p>\r\n\r\n    {Object.keys(users).map(key =>\r\n      <div key={key}>{users[key].username}</div>\r\n    )}\r\n  </div>\r\n\r\nconst authCondition = (authUser) => !!authUser;\r\n\r\nexport default withAuthorization(authCondition)(HomePage);\r\n\r\n/*class Home extends Component{\r\n  state = { isSignedIn: false}\r\n  uiConfig = {\r\n    signInFlow: \"redirect\",\r\n    signInOptions: [\r\n      firebase.auth.GoogleAuthProvider.PROVIDER_ID,\r\n      firebase.auth.EmailAuthProvider.PROVIDER_ID\r\n    ],\r\n    callbacks: {\r\n      sigInSuccess: () => false\r\n    }\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    firebase.auth().onAuthStateChanged(user => {\r\n      this.setState({ isSignedIn: !!user})\r\n      console.log(\"user\", user);\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <div className= \"LogInStyle\">\r\n        <NavBar />\r\n        \r\n        {this.state.isSignedIn ? (\r\n        <div>\r\n          <div className = \"user-loged\">\r\n            <h3>Hoy será una gran día de trabajo</h3>\r\n            <h4>Hola: {firebase.auth().currentUser.displayName}</h4>\r\n            {firebase.auth().currentUser.photoURL===null ?\r\n            (<img className = \"photo-user\" alt = \"foto de usuario\" src=\"https://github.com/YocelinGR/cdmx-2018-06-bc-core-am-burger-queen/blob/master/assets/waitress-avatar.jpg?raw=true\" />) :\r\n            (<img className = \"photo-user\" alt = \"foto de usuario\" src= {firebase.auth().currentUser.photoURL} />)}\r\n            <button className = \"btn btn-floating lighten-1 btn-user\" onClick={() => firebase.auth().signOut()}>Salir</button>\r\n            <FoodBar/>\r\n          </div>\r\n        </div>\r\n        ) : (\r\n        <div>\r\n          <h1>Burguer</h1>\r\n          <h2><strong>Queen</strong></h2>\r\n          <p>Para los amantes de lo bueno</p>\r\n          <img alt =\"An hamburguer for the main view\" src=\"https://github.com/YocelinGR/cdmx-2018-06-bc-core-am-burger-queen/blob/master/assets/hamb-burgue-circle.png?raw=true\" />\r\n            <StyledFirebaseAuth uiConfig= {this.uiConfig} firebaseAuth = {firebase.auth()} />\r\n        </div>\r\n        )}\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default Home;\r\n*/","import React from 'react';\r\n\r\nconst Breakfast = () =>\r\n  <div>\r\n    <h1>Landing Page</h1>\r\n  </div>\r\n\r\nexport default Breakfast;","import React from 'react';\r\n\r\nconst Lunch = () =>\r\n  <div>\r\n    <h1>Landing Page</h1>\r\n  </div>\r\n\r\nexport default Lunch;","import React from 'react';\r\n\r\nconst ChefView = () =>\r\n  <div>\r\n    <h1>Landing Page</h1>\r\n  </div>\r\n\r\nexport default ChefView;","import React from 'react';\r\n\r\nconst AdminView = () =>\r\n  <div>\r\n    <h1>Landing Page</h1>\r\n  </div>\r\n\r\nexport default AdminView;","import React, { Component } from 'react';\r\n\r\nimport { auth } from '../../firebase';\r\n\r\nconst updateByPropertyName = (propertyName, value) => () => ({\r\n  [propertyName]: value,\r\n});\r\n\r\nconst INITIAL_STATE = {\r\n  passwordOne: '',\r\n  error: null,\r\n};\r\n\r\nclass PasswordChangeForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { ...INITIAL_STATE };\r\n  }\r\n\r\n  onSubmit = (event) => {\r\n    const { passwordOne } = this.state;\r\n\r\n    auth.doPasswordUpdate(passwordOne)\r\n      .then(() => {\r\n        this.setState(() => ({ ...INITIAL_STATE }));\r\n      })\r\n      .catch(error => {\r\n        this.setState(updateByPropertyName('error', error));\r\n      });\r\n\r\n    event.preventDefault();\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      passwordOne,\r\n      error,\r\n    } = this.state;\r\n\r\n    const isInvalid =\r\n      passwordOne === '';\r\n\r\n    return (\r\n      <form onSubmit={this.onSubmit}>\r\n        <input\r\n          value={passwordOne}\r\n          onChange={event => this.setState(updateByPropertyName('passwordOne', event.target.value))}\r\n          type=\"password\"\r\n          placeholder=\"New Password\"\r\n        />\r\n        <button disabled={isInvalid} type=\"submit\">\r\n          Reset My Password\r\n        </button>\r\n\r\n        { error && <p>{error.message}</p> }\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PasswordChangeForm;","import React from 'react';\r\n\r\nimport AuthUserContext from '../Session/AuthUserContext';\r\nimport { PasswordForgetForm } from '../psw-forget/psw-forget';\r\nimport PasswordChangeForm from '../resetPassword/resetPassword';\r\nimport withAuthorization from '../Session/withAuthorization';\r\n\r\nconst AccountPage = () =>\r\n    <AuthUserContext.Consumer>\r\n    {authUser =>\r\n        <div>\r\n        <h1>Account: {authUser.email}</h1>\r\n        <PasswordForgetForm />\r\n        <PasswordChangeForm />\r\n        </div>\r\n    }\r\n    </AuthUserContext.Consumer>\r\n\r\nconst authCondition = (authUser) => !!authUser;\r\n\r\nexport default withAuthorization(authCondition)(AccountPage);\r\n","import React from 'react';\nimport { BrowserRouter as Router,\n\tRoute, } from 'react-router-dom';\n\nimport './App.css';\n\nimport Navigation from '../Navigation/Navigation';\nimport SignInPage from '../signin/signin';\nimport SignUpPage from '../signup/signup';\nimport Home from '../Home/Home';\nimport PswPassword from '../psw-forget/psw-forget';\nimport Breakfast from '../Breakfast/Breakfast';\nimport Lunch from '../Lunch/Lunch';\nimport ChefView from '../ChefView/ChefView';\nimport AdminView from '../AdminView/AdminView';\nimport AccountPage from '../Account/Account';\nimport withAuthentication from '../Session/withAuthentication';\nimport * as routes from '../../constants/routes'; \nconst App = () =>\n\t<Router>\n\t\t<div className=\"app\">\n\t\t\t<Navigation />\n\n\t\t\t<hr/>\n\n\t\t\t<Route exact path={routes.BREAKFAST} component={() => <Breakfast />} />\n      <Route exact path={routes.LUNCH} component={() => <Lunch />} />\n      <Route exact path={routes.CHEF} component={() => <ChefView />} />\n      <Route exact path={routes.ADMIN} component={() => <AdminView />} />\n\t\t\t<Route exact path={routes.SIGN_UP} component={() => <SignUpPage />} />\n\t\t\t<Route exact path={routes.SIGN_IN} component={() => <SignInPage />} />\n\t\t\t<Route exact path={routes.PASSWORD_FORGET} component={() => <PswPassword />} />\n\t\t\t<Route exact path={routes.HOME} component={() => <Home />} />\n\t\t\t<Route exact path={routes.ACCOUNT} component={() => <AccountPage />} />\n\n\t\t\t<hr/>\n\t\t</div>\n\t</Router>;\nexport default withAuthentication(App);\n\n/*import Home from '../Home/Home.js';\nimport WaitressView from '../WaitressView/WaitressView.js';\nimport ChefView from '../ChefView/ChefView.js';\nimport Breakfast from '../Breakfast/Breakfast.js';\nimport Lunch from '../Lunch/Lunch.js';\nimport AdminView from '../AdminView/AdminView.js';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <BrowserRouter>\n        <div>\n        <Switch>\n          <Route path=\"/\" exact component={Home} />\n          <Route path=\"/WaitressView\" exact component={WaitressView}/>\n          <Route path=\"/WaitressView/Breakfast\" exact component={Breakfast}/>\n          <Route path=\"/WaitressView/Lunch\" exact component={Lunch}/>\n          <Route path=\"/ChefView\" exact component={ChefView}/>\n          <Route path=\"/AdminView\" exact component={AdminView}/>\n          </Switch>\n        </div>\n        </BrowserRouter>\n      </div>\n    );\n  }\n}*/","import React from 'react';\r\n\r\nimport AuthUserContext from './AuthUserContext';\r\nimport { firebase } from '../../firebase';\r\n\r\nconst withAuthentication = (Component) =>\r\n    class WithAuthentication extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n      this.state = {\r\n        authUser: null,\r\n      };\r\n    }\r\n\r\n    componentDidMount() {\r\n      firebase.auth.onAuthStateChanged(authUser => {\r\n        authUser\r\n          ? this.setState(() => ({ authUser }))\r\n          : this.setState(() => ({ authUser: null }));\r\n      });\r\n    }\r\n\r\n    render() {\r\n      const { authUser } = this.state;\r\n\r\n      return (\r\n        <AuthUserContext.Provider value={authUser}>\r\n          <Component {...this.props} />\r\n        </AuthUserContext.Provider>\r\n      );\r\n    }\r\n  }\r\n\r\nexport default withAuthentication;","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\n\r\nimport App from './Components/App/App';\r\nimport Signin from './Components/signin/signin';\r\nimport Signup from './Components/signup/signup';\r\nimport PswPassword from './Components/psw-forget/psw-forget';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\nregisterServiceWorker();"],"sourceRoot":""}