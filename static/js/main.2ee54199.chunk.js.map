{"version":3,"sources":["config.js","Components/FoodBar/FoodBar.js","Components/GetYourOrder/DisplayOrder.js","Components/GetYourOrder/Button.js","Components/GetYourOrder/Buttons.js","Components/GetYourOrder/GetYourOrder.js","firebase/auth.js","Components/PasswordForget/PasswordForget.js","constants/routes.js","Components/Home/Home.js","Components/WaitressView/WaitressView.js","Components/ChefView/ChefView.js","Components/Breakfast/Breakfast.js","Components/Lunch/Lunch.js","Components/AdminView/AdminView.js","Components/App/App.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","FoodBar","react_default","a","createElement","className","Display","string","this","props","data","join","Component","Button","onClick","data-size","size","data-value","value","label","Buttons","children","GetYourOrder","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","calculateOperations","result","state","operations","math","eval","format","precision","String","setState","handleClick","e","target","getAttribute","newOperations","update","$push","DisplayOrder","GetYourOrder_Buttons","GetYourOrder_Button","doCreateUserWithEmailAndPasword","email","password","auth","createUserWithEmailAndPasword","doSignInWithEmailAndPasword","signInWithEmailAndPasword","doSignOut","signOut","doPassordReset","sendPasswordResetEmail","doPasswordUpdate","currentUser","updatePassword","updateByPropertyName","propertyName","defineProperty","INITIAL_STATE","error","PasswordForgetForm","onSubmit","event","preventDefault","then","objectSpread","catch","_this2","_this$state","isInvalid","onChange","id","type","htmlFor","disabled","message","PasswordForgetLink","Link","to","PasswordForget_PasswordForget","alt","src","PasswordForget_PasswordForgetForm","Home","isSignedIn","uiConfig","signInFlow","signInOptions","EmailAuthProvider","PROVIDER_ID","callbacks","sigInSuccess","componentDidMount","onAuthStateChanged","user","console","log","displayName","photoURL","Components_FoodBar_FoodBar","Components_GetYourOrder_GetYourOrder","StyledFirebaseAuth_default","firebaseAuth","PasswordForget_PasswordForgetLink","WaitressView","ChefView","Breakfast","Lunch","AdminView","App","BrowserRouter","basename","process","react","Switch","Route","path","exact","component","PasswordForgetView","Boolean","window","location","hostname","match","ReactDOM","render","Components_App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2ee54199.chunk.js","sourcesContent":["import firebase from 'firebase';\r\n\r\nconst configKeys = {\r\n    apiKey: \"AIzaSyBG5f44i0Z7u08aC4jvzwt5WtOA8FC_Ntw\",\r\n    authDomain: \"burgerqueen-4582f.firebaseapp.com\",\r\n    databaseURL: \"https://burgerqueen-4582f.firebaseio.com\",\r\n    projectId: \"burgerqueen-4582f\",\r\n    storageBucket: \"burgerqueen-4582f.appspot.com\",\r\n    messagingSenderId: \"791271137757\"\r\n};\r\n\r\nconst Config = firebase.initializeApp(configKeys);\r\n\r\nexport { Config };","import React from 'react';\r\nimport { Link} from 'react-router-dom';\r\nimport './FoodBar.css';\r\n\r\n\r\nconst FoodBar = () => {\r\n    return (\r\n    <div>\r\n        <a className=\"waves-effect waves-light btn\">Desayuno</a>\r\n        <a className=\"waves-effect waves-light btn\">Comida</a>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default FoodBar;","import React, { Component } from 'react'\r\nclass Display extends Component {\r\n  render() {\r\n    const string = this.props.data.join('')\r\n    return <div className=\"Display\"> {string} </div>\r\n  }\r\n}\r\nexport default Display;","import React, { Component } from 'react'\r\nclass Button extends Component {\r\n  render() {\r\n    return (\r\n      <div\r\n        onClick={this.props.onClick}\r\n        className=\"Button\"\r\n        data-size={this.props.size}\r\n        data-value={this.props.value}\r\n      >\r\n        {this.props.label}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Button","import React, { Component } from 'react'\r\n\r\nclass Buttons extends Component {\r\n  render() {\r\n    return <div className=\"Buttons\"> {this.props.children} </div>\r\n  }\r\n}\r\nexport default Buttons","import React, { Component } from 'react'\r\nimport update from 'immutability-helper'\r\nimport math from 'mathjs'\r\nimport './GetYourOrder.css'\r\nimport DisplayOrder from './DisplayOrder'\r\nimport Button from './Button'\r\nimport Buttons from './Buttons'\r\n\r\nclass GetYourOrder extends Component {\r\n  constructor() {\r\n    super()\r\n    this.state = { operations: [] }\r\n  }\r\n\r\n  calculateOperations = () => {\r\n    let result = this.state.operations.join('')\r\n    if (result) {\r\n      result = math.eval(result)\r\n      result = math.format(result, { precision: 14 })\r\n      result = String(result)\r\n      this.setState({\r\n        operations: [result],\r\n      })\r\n    }\r\n  }\r\n  handleClick = e => {\r\n    const value = e.target.getAttribute('data-value')\r\n    switch (value) {\r\n      case 'clear':\r\n        this.setState({\r\n          operations: [],\r\n        })\r\n        break\r\n      case 'equal':\r\n        this.calculateOperations()\r\n        break\r\n      default:\r\n        const newOperations = update(this.state.operations, {\r\n          $push: [value],\r\n        })\r\n        this.setState({\r\n          operations: newOperations,\r\n        })\r\n        break\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <DisplayOrder data={this.state.operations} />\r\n        <Buttons>\r\n          <Button onClick={this.handleClick} label=\"C\" value=\"clear\" />\r\n          <Button onClick={this.handleClick} label=\"Café A\" value=\"5\" />\r\n          <Button onClick={this.handleClick} label=\"Café L\" value=\"7\" />\r\n          <Button onClick={this.handleClick} label=\"Swandich\" value=\"10\" />\r\n          <Button onClick={this.handleClick} label=\"Jugo\" value=\"7\" />\r\n\r\n          <Button onClick={this.handleClick} label=\"Hamb S\" value=\"10\" />\r\n          <Button onClick={this.handleClick} label=\"Ham D\" value=\"15\" />\r\n          <Button onClick={this.handleClick} label=\"Papas\" value=\"5\" />\r\n          <Button onClick={this.handleClick} label=\"Onion\" value=\"5\" />\r\n          <Button onClick={this.handleClick} label=\"Agua C\" value=\"5\" />\r\n\r\n          <Button onClick={this.handleClick} label=\"Agua G\" value=\"8\" />\r\n          <Button onClick={this.handleClick} label=\"Refresco C\" value=\"7\" />\r\n          <Button onClick={this.handleClick} label=\"Refresco G\" value=\"10\" />\r\n          <Button onClick={this.handleClick} label=\"Queso\" value=\"1\" />\r\n          <Button onClick={this.handleClick} label=\"Huevo\" value=\"1\" />\r\n\r\n          <Button onClick={this.handleClick} label=\"-\" value=\"-\" />\r\n          <Button onClick={this.handleClick} label=\"+\" size=\"2\" value=\"+\" />\r\n          <Button onClick={this.handleClick} label=\"=\" size=\"2\" value=\"equal\" />\r\n        </Buttons>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default GetYourOrder;\r\n","import { auth} from './firebase';\r\n// Sign UP\r\nexport const doCreateUserWithEmailAndPasword = (email,password) =>\r\n    auth.createUserWithEmailAndPasword(email, password);\r\n\r\n// Sign in\r\nexport const doSignInWithEmailAndPasword = (email,password) =>\r\n    auth.signInWithEmailAndPasword(email, password);\r\n\r\n// Sign out\r\nexport const doSignOut = () => \r\n    auth.signOut();\r\n\r\n//Password reset\r\nexport const doPassordReset = (email) => \r\n    auth.sendPasswordResetEmail(email);\r\n\r\n// Password Change\r\n\r\nexport const doPasswordUpdate = (password) =>\r\n    auth.currentUser.updatePassword(password);","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { auth } from '../../firebase';\r\nimport './PasswordForget.css';\r\nimport * as routes from '../../constants/routes';\r\n\r\nconst PasswordForgetView = () => \r\n  <div className=\"row\">\r\n\t\t\t\t<h1>Burguer</h1>\r\n\t\t\t\t<h2><strong>Queen</strong></h2>\r\n\t\t\t\t<p>Para los amantes de lo bueno</p>\r\n\t\t\t\t<img alt =\"An hamburguer for the main view\" src=\"https://github.com/YocelinGR/cdmx-2018-06-bc-core-am-burger-queen/blob/master/assets/hamb-burgue-circle.png?raw=true\" />\r\n        <PasswordForgetForm />\r\n\t</div>\r\n\r\nconst updateByPropertyName =(propertyName, value) => () =>({\r\n  [propertyName]: value,\r\n});\r\n\r\nconst INITIAL_STATE = {\r\n  email: '',\r\n  error: null,\r\n};\r\n\r\nclass PasswordForgetForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { ...INITIAL_STATE };\r\n  }\r\n\r\n  onSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    const { email } = this.state;\r\n\r\n    auth.sendPasswordResetEmail(email)\r\n      .then(() => {\r\n        this.setState(() => ({ ...INITIAL_STATE }));\r\n      })\r\n      .catch(error => {\r\n        this.setState(updateByPropertyName('error', error));\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      email,\r\n      error,\r\n    } = this.state;\r\n\r\n    const isInvalid = email === '';\r\n\r\n    return (\r\n\t\t<div className= \"LogInStyle\">\r\n\t\t\t<section className = \"form-format\">\r\n\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t<form className=\"col s12 onSubmit={this.onSubmit}\">\r\n\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t<div className=\"input-field col s6 offset-s3\">\r\n\t\t\t\t\t\t\t\t<input value={this.state.email}\r\n          \t\t\t\t\t\t\tonChange={event => this.setState(updateByPropertyName('email', event.target.value))}\r\n\t\t\t\t\t\t\t\tid=\"email\" type=\"email\" className=\"validate input-form\"></input>\r\n\t\t\t\t\t\t\t\t<label htmlFor=\"email\">Email</label>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t<div className=\"input-field col s6 offset-s3\">\r\n\t\t\t\t\t\t\t\t<button disabled={isInvalid} type=\"submit\" className=\"waves-effect waves-light btn go-btn\">Recuperar</button>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n            { error && <p>{error.message}</p> }          \r\n\t\t\t\t\t</form>\r\n\t\t\t\t</div>\r\n\t\t\t</section>\r\n\t\t</div>\r\n    );\r\n  }\r\n}\r\nconst PasswordForgetLink = () =>\r\n  <p>Olvidaste tu contraseña\r\n    <Link to = {routes.PASSWORD_FORGET}>Da click aquí</Link>\r\n  </p>\r\n\r\nexport default PasswordForgetView;\r\n\r\nexport {\r\n  PasswordForgetForm,\r\n  PasswordForgetLink,\r\n}\r\n","export const HOME = '/';\r\nexport const WAITRESS_VIEW = '/WaitressView';\r\nexport const  BREAKFAST = '/breakfast';\r\nexport const  LUNCH = '/lunch';\r\nexport const  CHEF = '/chef';\r\nexport const  ADMIN = '/admin';\r\nexport const PASSWORD_FORGET = '/psw-forget';\r\n","/*import React, { Component } from 'react';\r\n\r\n// import { Config } from '../../config'; // eslint-disable-next-line\r\nimport './Home.css'\r\nimport withAuthorization from '../Session/withAuthorization';\r\nimport { db } from '../../firebase';\r\n\r\n//import firebase from 'firebase';\r\n//import StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\r\n//import NavBar from '../NavBar/NavBar';\r\n//import FoodBar from '../FoodBar/FoodBar';\r\n\r\nclass HomePage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      users: {}\r\n    };/*\r\n  }\r\n\r\n  componentDidMount() {\r\n    db.onceGetUsers().then(snapshot =>\r\n      this.setState(() => ({ users: snapshot.val() }))\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { users } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <p>Acceso restringido para usuarios</p>\r\n\r\n        { !!users && <UserList users={users} /> }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst UserList = ({ users }) =>\r\n  <div>\r\n    <h2>List of Usernames of Users</h2>\r\n    <p>(Saved on Sign Up in Firebase Database)</p>\r\n\r\n    {Object.keys(users).map(key =>\r\n      <div key={key}>{users[key].username}</div>\r\n    )}\r\n  </div>\r\n\r\nconst authCondition = (authUser) => !!authUser;\r\n\r\nexport default withAuthorization(authCondition)(HomePage);*/\r\n\r\nimport React, { Component } from 'react';\r\n\r\nimport { Config } from '../../config'; // eslint-disable-next-line\r\nimport './Home.css'\r\nimport firebase from 'firebase';\r\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\r\nimport NavBar from '../NavBar/NavBar';\r\nimport FoodBar from '../FoodBar/FoodBar';\r\nimport GetYourOrder from '../GetYourOrder/GetYourOrder';\r\nimport { Link } from 'react-router-dom';\r\nimport { auth } from '../../firebase';\r\nimport { PasswordForgetLink } from '../PasswordForget/PasswordForget';\r\n\r\nclass Home extends Component{\r\n  state = { isSignedIn: false}\r\n  uiConfig = {\r\n    signInFlow: \"redirect\",\r\n    signInOptions: [\r\n      // firebase.auth.GoogleAuthProvider.PROVIDER_ID,\r\n      firebase.auth.EmailAuthProvider.PROVIDER_ID\r\n    ],\r\n    callbacks: {\r\n      sigInSuccess: () => false\r\n    }\r\n  }\r\n  \r\n  componentDidMount = () => {\r\n    firebase.auth().onAuthStateChanged(user => {\r\n      this.setState({ isSignedIn: !!user})\r\n      console.log(\"user\", user);\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <div className= \"LogInStyle\">\r\n        \r\n        \r\n        {this.state.isSignedIn ? (\r\n        <div>\r\n          <div className = \"user-loged\">\r\n            <h3>Hoy será una gran día de trabajo</h3>\r\n            <h4>Hola: {firebase.auth().currentUser.displayName}</h4>\r\n            {firebase.auth().currentUser.photoURL===null ?\r\n            (<img className = \"photo-user\" alt = \"foto de usuario\" src=\"https://github.com/YocelinGR/cdmx-2018-06-bc-core-am-burger-queen/blob/master/assets/waitress-avatar.jpg?raw=true\" />) :\r\n            (<img className = \"photo-user\" alt = \"foto de usuario\" src= {firebase.auth().currentUser.photoURL} />)}\r\n            <button className = \"btn btn-floating lighten-1 btn-user\" onClick={() => firebase.auth().signOut()}>Salir</button>\r\n            <FoodBar/>\r\n          </div>\r\n          <div>\r\n            <GetYourOrder />\r\n          </div>\r\n        </div>\r\n        ) : (\r\n        <div>\r\n          <h1>Burguer</h1>\r\n          <h2><strong>Queen</strong></h2>\r\n          <p>Para los amantes de lo bueno</p>\r\n          <img alt =\"An hamburguer for the main view\" src=\"https://github.com/YocelinGR/cdmx-2018-06-bc-core-am-burger-queen/blob/master/assets/hamb-burgue-circle.png?raw=true\" />\r\n            <StyledFirebaseAuth uiConfig= {this.uiConfig} firebaseAuth = {firebase.auth()} />\r\n          <PasswordForgetLink />\r\n        </div>\r\n        )}\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default Home;","import React from 'react';\r\n\r\nconst WaitressView = () =>\r\n  <div>\r\n    <h1>Landing Page</h1>\r\n  </div>\r\n\r\nexport default WaitressView;","import React from 'react';\r\n\r\nconst ChefView = () =>\r\n  <div>\r\n    <h1>Chef Page</h1>\r\n  </div>\r\n\r\nexport default ChefView;","import React from 'react';\r\n\r\nconst Breakfast = () =>\r\n  <div>\r\n    <h1>Breakfast Page</h1>\r\n  </div>\r\n\r\nexport default Breakfast;","import React from 'react';\r\n\r\nconst Lunch = () =>\r\n  <div>\r\n    <h1>Lunch Page</h1>\r\n  </div>\r\n\r\nexport default Lunch;","import React from 'react';\r\n\r\nconst AdminView = () =>\r\n  <div>\r\n    <h1>AdminView</h1>\r\n  </div>\r\n\r\nexport default AdminView;","/*import React from 'react';\nimport { BrowserRouter as Router,\n\tRoute, } from 'react-router-dom';\n\nimport './App.css';\n\nimport Navigation from '../Navigation/Navigation';\nimport SignInPage from '../SignIn/SignIn';\nimport SignUpPage from '../SignUp/SignUp';\nimport HomePage from '../Home/Home';\nimport PasswordForgetPage  from '../PasswordForget/PasswordForget';\nimport Breakfast from '../Breakfast/Breakfast';\nimport Lunch from '../Lunch/Lunch';\nimport ChefView from '../ChefView/ChefView';\nimport AdminView from '../AdminView/AdminView';\nimport AccountPage from '../Account/Account';\nimport withAuthentication from '../Session/withAuthentication';\nimport * as routes from '../../constants/routes'; \nconst App = () =>\n\t<Router>\n\t\t<div className=\"app\">\n\t\t\t<Navigation />\n\n\t\t\t<hr/>\n\n\t\t\t<Route exact path={routes.BREAKFAST} component={() => <Breakfast />} />\n      <Route exact path={routes.LUNCH} component={() => <Lunch />} />\n      <Route exact path={routes.CHEF} component={() => <ChefView />} />\n      <Route exact path={routes.ADMIN} component={() => <AdminView />} />\n\t\t\t<Route exact path={routes.SIGN_UP} component={() => <SignUpPage />} />\n\t\t\t<Route exact path={routes.SIGN_IN} component={() => <SignInPage />} />\n\t\t\t<Route exact path={routes.PASSWORD_FORGET} component={() => <PasswordForgetPage  />} />\n\t\t\t<Route exact path={routes.HOME} component={() => <HomePage />} />\n\t\t\t<Route exact path={routes.ACCOUNT} component={() => <AccountPage />} />\n\n\t\t\t<hr/>\n\t\t</div>\n\t</Router>;\nexport default withAuthentication(App);*/\n\nimport React, {Fragment} from 'react';\nimport {\n  BrowserRouter, Switch, Route, \n} from 'react-router-dom';\n\nimport './App.css';\n\nimport Home from '../Home/Home.js';\nimport WaitressView from '../WaitressView/WaitressView.js';\nimport ChefView from '../ChefView/ChefView.js';\nimport Breakfast from '../Breakfast/Breakfast.js';\nimport Lunch from '../Lunch/Lunch.js';\nimport AdminView from '../AdminView/AdminView.js';\nimport PasswordForgetView from '../PasswordForget/PasswordForget.js'\nimport * as routes from \"../../constants/routes\";\n\nconst App = () => {\n    return (\n      <div className=\"App\">\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <Fragment>\n        <Switch>\n          <Route path={routes.HOME} exact component={Home} />\n          <Route path={routes.WAITRESS_VIEW} exact component={WaitressView}/>\n          <Route path={routes.BREAKFAST} exact component={Breakfast}/>\n          <Route path={routes.LUNCH} exact component={Lunch}/>\n          <Route path={routes.CHEF} exact component={ChefView}/>\n          <Route path={routes.ADMIN} exact component={AdminView}/>\n          <Route path={routes.PASSWORD_FORGET} exact component={PasswordForgetView}/>\n          </Switch>\n        </Fragment>\n        </BrowserRouter>\n      </div>\n    );\n  }\n\n\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA.\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n      // [::1] is the IPv6 localhost address.\r\n      window.location.hostname === '[::1]' ||\r\n      // 127.0.0.1/8 is considered localhost for IPv4.\r\n      window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n      )\r\n  );\r\n  \r\n  export function register(config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n      // The URL constructor is available in all browsers that support SW.\r\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n      if (publicUrl.origin !== window.location.origin) {\r\n        // Our service worker won't work if PUBLIC_URL is on a different origin\r\n        // from what our page is served on. This might happen if a CDN is used to\r\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n        return;\r\n      }\r\n  \r\n      window.addEventListener('load', () => {\r\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n  \r\n        if (isLocalhost) {\r\n          // This is running on localhost. Let's check if a service worker still exists or not.\r\n          checkValidServiceWorker(swUrl, config);\r\n  \r\n          // Add some additional logging to localhost, pointing developers to the\r\n          // service worker/PWA documentation.\r\n          navigator.serviceWorker.ready.then(() => {\r\n            console.log(\r\n              'This web app is being served cache-first by a service ' +\r\n                'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n            );\r\n          });\r\n        } else {\r\n          // Is not localhost. Just register service worker\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  function registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n      .register(swUrl)\r\n      .then(registration => {\r\n        registration.onupdatefound = () => {\r\n          const installingWorker = registration.installing;\r\n          installingWorker.onstatechange = () => {\r\n            if (installingWorker.state === 'installed') {\r\n              if (navigator.serviceWorker.controller) {\r\n                // At this point, the updated precached content has been fetched,\r\n                // but the previous service worker will still serve the older\r\n                // content until all client tabs are closed.\r\n                console.log(\r\n                  'New content is available and will be used when all ' +\r\n                    'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n                );\r\n  \r\n                // Execute callback\r\n                if (config && config.onUpdate) {\r\n                  config.onUpdate(registration);\r\n                }\r\n              } else {\r\n                // At this point, everything has been precached.\r\n                // It's the perfect time to display a\r\n                // \"Content is cached for offline use.\" message.\r\n                console.log('Content is cached for offline use.');\r\n  \r\n                // Execute callback\r\n                if (config && config.onSuccess) {\r\n                  config.onSuccess(registration);\r\n                }\r\n              }\r\n            }\r\n          };\r\n        };\r\n      })\r\n      .catch(error => {\r\n        console.error('Error during service worker registration:', error);\r\n      });\r\n  }\r\n  \r\n  function checkValidServiceWorker(swUrl, config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl)\r\n      .then(response => {\r\n        // Ensure service worker exists, and that we really are getting a JS file.\r\n        if (\r\n          response.status === 404 ||\r\n          response.headers.get('content-type').indexOf('javascript') === -1\r\n        ) {\r\n          // No service worker found. Probably a different app. Reload the page.\r\n          navigator.serviceWorker.ready.then(registration => {\r\n            registration.unregister().then(() => {\r\n              window.location.reload();\r\n            });\r\n          });\r\n        } else {\r\n          // Service worker found. Proceed as normal.\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      })\r\n      .catch(() => {\r\n        console.log(\r\n          'No internet connection found. App is running in offline mode.'\r\n        );\r\n      });\r\n  }\r\n  \r\n  export function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n      navigator.serviceWorker.ready.then(registration => {\r\n        registration.unregister();\r\n      });\r\n    }\r\n  }","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './Components/App/App';\r\n// import registerServiceWorker from './registerServiceWorker';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n//registerServiceWorker();\r\nserviceWorker.unregister();"],"sourceRoot":""}