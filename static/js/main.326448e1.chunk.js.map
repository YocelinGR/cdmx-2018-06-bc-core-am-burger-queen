{"version":3,"sources":["config.js","Components/FoodBar/FoodBar.js","Components/Home/Home.js","Components/WaitressView/WaitressView.js","Components/ChefView/ChefView.js","Components/Breakfast/Breakfast.js","Components/Lunch/Lunch.js","Components/AdminView/AdminView.js","Components/App/App.js","registerServiceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","FoodBar","react_default","a","createElement","class","Home","state","isSignedIn","uiConfig","signInFlow","signInOptions","auth","GoogleAuthProvider","PROVIDER_ID","EmailAuthProvider","callbacks","sigInSuccess","componentDidMount","onAuthStateChanged","user","_this","setState","console","log","className","this","currentUser","displayName","photoURL","alt","src","onClick","signOut","Components_FoodBar_FoodBar","StyledFirebaseAuth_default","firebaseAuth","Component","WaitressView","ChefView","Breakfast","Lunch","AdminView","App","BrowserRouter","Switch","Route","path","exact","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","ReactDOM","render","Components_App_App","document","getElementById","URL","process","origin","addEventListener","concat","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.326448e1.chunk.js","sourcesContent":["import firebase from 'firebase';\r\n\r\nconst configKeys = {\r\n    apiKey: \"AIzaSyBG5f44i0Z7u08aC4jvzwt5WtOA8FC_Ntw\",\r\n    authDomain: \"burgerqueen-4582f.firebaseapp.com\",\r\n    databaseURL: \"https://burgerqueen-4582f.firebaseio.com\",\r\n    projectId: \"burgerqueen-4582f\",\r\n    storageBucket: \"burgerqueen-4582f.appspot.com\",\r\n    messagingSenderId: \"791271137757\"\r\n};\r\n\r\nconst Config = firebase.initializeApp(configKeys);\r\n\r\nexport { Config };","import React from 'react';\r\nimport { Link} from 'react-router-dom';\r\nimport './FoodBar.css';\r\n\r\n\r\nconst FoodBar = () => {\r\n    return (\r\n    <div>\r\n        <a class=\"waves-effect waves-light btn\">Desayuno</a>\r\n        <a class=\"waves-effect waves-light btn\">Comida</a>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default FoodBar;","/*import React, { Component } from 'react';\r\n\r\n// import { Config } from '../../config'; // eslint-disable-next-line\r\nimport './Home.css'\r\nimport withAuthorization from '../Session/withAuthorization';\r\nimport { db } from '../../firebase';\r\n\r\n//import firebase from 'firebase';\r\n//import StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\r\n//import NavBar from '../NavBar/NavBar';\r\n//import FoodBar from '../FoodBar/FoodBar';\r\n\r\nclass HomePage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      users: {}\r\n    };/*\r\n  }\r\n\r\n  componentDidMount() {\r\n    db.onceGetUsers().then(snapshot =>\r\n      this.setState(() => ({ users: snapshot.val() }))\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { users } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <p>Acceso restringido para usuarios</p>\r\n\r\n        { !!users && <UserList users={users} /> }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst UserList = ({ users }) =>\r\n  <div>\r\n    <h2>List of Usernames of Users</h2>\r\n    <p>(Saved on Sign Up in Firebase Database)</p>\r\n\r\n    {Object.keys(users).map(key =>\r\n      <div key={key}>{users[key].username}</div>\r\n    )}\r\n  </div>\r\n\r\nconst authCondition = (authUser) => !!authUser;\r\n\r\nexport default withAuthorization(authCondition)(HomePage);*/\r\n\r\nimport React, { Component } from 'react';\r\n\r\nimport { Config } from '../../config'; // eslint-disable-next-line\r\nimport './Home.css'\r\nimport firebase from 'firebase';\r\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\r\nimport NavBar from '../NavBar/NavBar';\r\nimport FoodBar from '../FoodBar/FoodBar';\r\n\r\nclass Home extends Component{\r\n  state = { isSignedIn: false}\r\n  uiConfig = {\r\n    signInFlow: \"redirect\",\r\n    signInOptions: [\r\n      firebase.auth.GoogleAuthProvider.PROVIDER_ID,\r\n      firebase.auth.EmailAuthProvider.PROVIDER_ID\r\n    ],\r\n    callbacks: {\r\n      sigInSuccess: () => false\r\n    }\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    firebase.auth().onAuthStateChanged(user => {\r\n      this.setState({ isSignedIn: !!user})\r\n      console.log(\"user\", user);\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <div className= \"LogInStyle\">\r\n        \r\n        \r\n        {this.state.isSignedIn ? (\r\n        <div>\r\n          <div className = \"user-loged\">\r\n            <h3>Hoy será una gran día de trabajo</h3>\r\n            <h4>Hola: {firebase.auth().currentUser.displayName}</h4>\r\n            {firebase.auth().currentUser.photoURL===null ?\r\n            (<img className = \"photo-user\" alt = \"foto de usuario\" src=\"https://github.com/YocelinGR/cdmx-2018-06-bc-core-am-burger-queen/blob/master/assets/waitress-avatar.jpg?raw=true\" />) :\r\n            (<img className = \"photo-user\" alt = \"foto de usuario\" src= {firebase.auth().currentUser.photoURL} />)}\r\n            <button className = \"btn btn-floating lighten-1 btn-user\" onClick={() => firebase.auth().signOut()}>Salir</button>\r\n            <FoodBar/>\r\n          </div>\r\n        </div>\r\n        ) : (\r\n        <div>\r\n          <h1>Burguer</h1>\r\n          <h2><strong>Queen</strong></h2>\r\n          <p>Para los amantes de lo bueno</p>\r\n          <img alt =\"An hamburguer for the main view\" src=\"https://github.com/YocelinGR/cdmx-2018-06-bc-core-am-burger-queen/blob/master/assets/hamb-burgue-circle.png?raw=true\" />\r\n            <StyledFirebaseAuth uiConfig= {this.uiConfig} firebaseAuth = {firebase.auth()} />\r\n        </div>\r\n        )}\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default Home;","import React from 'react';\r\n\r\nconst WaitressView = () =>\r\n  <div>\r\n    <h1>Landing Page</h1>\r\n  </div>\r\n\r\nexport default WaitressView;","import React from 'react';\r\n\r\nconst ChefView = () =>\r\n  <div>\r\n    <h1>Chef Page</h1>\r\n  </div>\r\n\r\nexport default ChefView;","import React from 'react';\r\n\r\nconst Breakfast = () =>\r\n  <div>\r\n    <h1>Breakfast Page</h1>\r\n  </div>\r\n\r\nexport default Breakfast;","import React from 'react';\r\n\r\nconst Lunch = () =>\r\n  <div>\r\n    <h1>Lunch Page</h1>\r\n  </div>\r\n\r\nexport default Lunch;","import React from 'react';\r\n\r\nconst AdminView = () =>\r\n  <div>\r\n    <h1>AdminView</h1>\r\n  </div>\r\n\r\nexport default AdminView;","/*import React from 'react';\nimport { BrowserRouter as Router,\n\tRoute, } from 'react-router-dom';\n\nimport './App.css';\n\nimport Navigation from '../Navigation/Navigation';\nimport SignInPage from '../SignIn/SignIn';\nimport SignUpPage from '../SignUp/SignUp';\nimport HomePage from '../Home/Home';\nimport PasswordForgetPage  from '../PasswordForget/PasswordForget';\nimport Breakfast from '../Breakfast/Breakfast';\nimport Lunch from '../Lunch/Lunch';\nimport ChefView from '../ChefView/ChefView';\nimport AdminView from '../AdminView/AdminView';\nimport AccountPage from '../Account/Account';\nimport withAuthentication from '../Session/withAuthentication';\nimport * as routes from '../../constants/routes'; \nconst App = () =>\n\t<Router>\n\t\t<div className=\"app\">\n\t\t\t<Navigation />\n\n\t\t\t<hr/>\n\n\t\t\t<Route exact path={routes.BREAKFAST} component={() => <Breakfast />} />\n      <Route exact path={routes.LUNCH} component={() => <Lunch />} />\n      <Route exact path={routes.CHEF} component={() => <ChefView />} />\n      <Route exact path={routes.ADMIN} component={() => <AdminView />} />\n\t\t\t<Route exact path={routes.SIGN_UP} component={() => <SignUpPage />} />\n\t\t\t<Route exact path={routes.SIGN_IN} component={() => <SignInPage />} />\n\t\t\t<Route exact path={routes.PASSWORD_FORGET} component={() => <PasswordForgetPage  />} />\n\t\t\t<Route exact path={routes.HOME} component={() => <HomePage />} />\n\t\t\t<Route exact path={routes.ACCOUNT} component={() => <AccountPage />} />\n\n\t\t\t<hr/>\n\t\t</div>\n\t</Router>;\nexport default withAuthentication(App);*/\n\nimport React, { Component } from 'react';\n\nimport {\n  BrowserRouter, Switch, Route, \n} from 'react-router-dom';\n\nimport './App.css';\n\nimport Home from '../Home/Home.js';\nimport WaitressView from '../WaitressView/WaitressView.js';\nimport ChefView from '../ChefView/ChefView.js';\nimport Breakfast from '../Breakfast/Breakfast.js';\nimport Lunch from '../Lunch/Lunch.js';\nimport AdminView from '../AdminView/AdminView.js';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <BrowserRouter>\n        <div>\n        <Switch>\n          <Route path=\"/\" exact component={Home} />\n          <Route path=\"/WaitressView\" exact component={WaitressView}/>\n          <Route path=\"/WaitressView/Breakfast\" exact component={Breakfast}/>\n          <Route path=\"/WaitressView/Lunch\" exact component={Lunch}/>\n          <Route path=\"/ChefView\" exact component={ChefView}/>\n          <Route path=\"/AdminView\" exact component={AdminView}/>\n          </Switch>\n        </div>\n        </BrowserRouter>\n      </div>\n    );\n  }\n}\n\nexport default App;","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\n\r\nimport App from './Components/App/App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\nregisterServiceWorker();"],"sourceRoot":""}